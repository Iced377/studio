// This is an autogenerated file. DO NOT edit.
'use server';
/**
 * @fileOverview This file contains the Genkit flow for FODMAP detection in food items.
 *
 * - analyzeFoodItem - Analyzes a food item and calculates a FODMAP score for each ingredient.
 * - AnalyzeFoodItemInput - The input type for the analyzeFoodItem function.
 * - AnalyzeFoodItemOutput - The return type for the analyzeFoodItem function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeFoodItemInputSchema = z.object({
  foodItem: z.string().describe('The name of the food item to analyze.'),
  ingredients: z.string().describe('A comma-separated list of ingredients in the food item.'),
});
export type AnalyzeFoodItemInput = z.infer<typeof AnalyzeFoodItemInputSchema>;

const FodmapScoreSchema = z.enum(['Green', 'Yellow', 'Red']);

const IngredientScoreSchema = z.object({
  ingredient: z.string().describe("The name of the ingredient."),
  score: FodmapScoreSchema.describe("The FODMAP score for this ingredient (Green, Yellow, or Red).")
});

const AnalyzeFoodItemOutputSchema = z.object({
  ingredientFodmapScores: z.array(IngredientScoreSchema).describe('A list of ingredients and their FODMAP scores.'),
  overallRisk: FodmapScoreSchema.describe('The overall FODMAP risk level of the food item (Green, Yellow, or Red).'),
  reason: z.string().describe('Explanation of why food item has the assigned risk level.'),
});
export type AnalyzeFoodItemOutput = z.infer<typeof AnalyzeFoodItemOutputSchema>;

export async function analyzeFoodItem(input: AnalyzeFoodItemInput): Promise<AnalyzeFoodItemOutput> {
  return analyzeFoodItemFlow(input);
}

const analyzeFoodItemPrompt = ai.definePrompt({
  name: 'analyzeFoodItemPrompt',
  input: {schema: AnalyzeFoodItemInputSchema},
  output: {schema: AnalyzeFoodItemOutputSchema},
  prompt: `You are an AI assistant specialized in FODMAP analysis of food items.
FODMAPs are types of carbohydrates that can cause digestive issues for people with Irritable Bowel Syndrome (IBS).
You will receive a food item and a list of its ingredients. Your task is to analyze each ingredient and determine its FODMAP score (Green, Yellow, or Red) based on common FODMAP content.

Here's a guide for FODMAP scoring:

*   Green: Low FODMAP content. Generally safe for people with IBS.
*   Yellow: Moderate FODMAP content. May cause issues for some people with IBS.
*   Red: High FODMAP content. Likely to cause issues for people with IBS.

Consider common FODMAPs such as Fructose, Lactose, Fructans, Galactans, and Polyols when analyzing ingredients.

Food Item: {{{foodItem}}}
Ingredients: {{{ingredients}}}

Output a JSON object adhering to the following structure:
1.  \`ingredientFodmapScores\`: This must be an array of objects. Each object in the array should represent a single ingredient and its score, containing two properties:
    *   \`ingredient\` (string): The name of the ingredient.
    *   \`score\` (string, one of 'Green', 'Yellow', 'Red'): The FODMAP score for this ingredient.
2.  \`overallRisk\` (string, one of 'Green', 'Yellow', 'Red'): The overall FODMAP risk level of the food item.
3.  \`reason\` (string): An explanation of why the food item has been assigned the overallRisk level.
`,
});

const analyzeFoodItemFlow = ai.defineFlow(
  {
    name: 'analyzeFoodItemFlow',
    inputSchema: AnalyzeFoodItemInputSchema,
    outputSchema: AnalyzeFoodItemOutputSchema,
  },
  async input => {
    const {output} = await analyzeFoodItemPrompt(input);
    return output!;
  }
);

